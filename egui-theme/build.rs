use cargo_lock::Lockfile;
use std::fs::{create_dir, File};
use std::io::{BufWriter, Write};

const PACKAGE_NAME: &str = "egui-theme";
const EGUI_PKG_NAME: &str = "egui";

// To help ensure that we can demonstrate compatibility and emit relevant errors when importing egui themes, we need to get some version information about of the lockfile this was built with.
fn main() {
    let lock_file = Lockfile::load("../Cargo.lock")
        .expect("cargo lock file should exist before the build kicks off");

    let egui_theme_pkg = lock_file
        .packages
        .iter()
        .find(|item| item.name.as_str() == PACKAGE_NAME)
        .expect("this must exist");

    let egui_pkg = egui_theme_pkg
        .dependencies
        .iter()
        .find(|item| item.name.as_str() == EGUI_PKG_NAME)
        .expect("this must also exist");

    // We need to ensure that the generated directory is created properly.
    let _ = create_dir("generated");
    let out_file = File::create("generated/meta.rs").expect("cannot create file");

    let mut writer = BufWriter::new(out_file);
    writeln!(
        writer,
        "// THIS IS AN AUTOGENERATED FILE AND SHOULD NOT BE MODIFIED OR SAVED"
    )
    .expect("failed to write");

    let version = &egui_theme_pkg.version;
    writeln!(writer, "const EGUI_THEME_VERSION: &str = \"{version}\";").expect("failed to write");

    let version = &egui_pkg.version;
    writeln!(writer, "const EGUI_VERSION: &str = \"{version}\";").expect("failed to write");
}
